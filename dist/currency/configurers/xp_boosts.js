import { db } from "../../startup/db.js";
import SQL from "sql-template-strings";
export async function edit_xp_boost(data) {
    const boost = await db.get(SQL `SELECT * FROM xp_boosts where id = ${data.id}`);
    await db.run(`UPDATE xp_boosts SET multiplier = ${data.multiplier ?? boost.multiplier}, owner_id = ${data.owner_id ?? boost.owner_id}, unclaimed_time_ms = ${data.unclaimed_time_ms || boost.unclaimed_time_ms} WHERE id = ${data.id}`);
}
export async function generate_boost_id() {
    const booster_id_list = (await db.all(SQL `SELECT id FROM xp_boosts`)).map((boost) => boost.id);
    if (!booster_id_list[0])
        return `1`;
    else {
        let id = 1;
        while (booster_id_list.includes(id))
            id++;
        return id.toString();
    }
}
export async function extend_xp_boost(data) {
    const xp_boost = await db.get(`SELECT * from xp_boosts WHERE id = ${data.id}`);
    const old_ms = xp_boost.unclaimed_time_ms;
    const new_ms = old_ms + data.extend_ms;
    await db.run(SQL `UPDATE xp_boosts SET unclaimed_time_ms = ${new_ms} WHERE id = ${data.id}`);
}
export async function generate_xp_boost(data) {
    try {
        await db.run(SQL `INSERT INTO xp_boosts (id, unclaimed_time_ms, multiplier, owner_id) VALUES (${data.id ?? (await generate_boost_id())}, ${data.unclaimed_time_ms}, ${data.multiplier}, ${data.owner_id})`);
    }
    catch (err) {
        await generate_xp_boost(data);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieHBfYm9vc3RzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2N1cnJlbmN5L2NvbmZpZ3VyZXJzL3hwX2Jvb3N0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDekMsT0FBTyxHQUFHLE1BQU0sc0JBQXNCLENBQUM7QUFjdkMsTUFBTSxDQUFDLEtBQUssVUFBVSxhQUFhLENBQUMsSUFBaUI7SUFDbkQsTUFBTSxLQUFLLEdBQUcsTUFBTSxFQUFFLENBQUMsR0FBRyxDQUN4QixHQUFHLENBQUEsc0NBQXNDLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FDbkQsQ0FBQztJQUNGLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FDVixxQ0FDRSxJQUFJLENBQUMsVUFBVSxJQUFJLEtBQUssQ0FBQyxVQUMzQixnQkFBZ0IsSUFBSSxDQUFDLFFBQVEsSUFBSSxLQUFLLENBQUMsUUFBUSx5QkFDN0MsSUFBSSxDQUFDLGlCQUFpQixJQUFJLEtBQUssQ0FBQyxpQkFDbEMsZUFBZSxJQUFJLENBQUMsRUFBRSxFQUFFLENBQ3pCLENBQUM7QUFDSixDQUFDO0FBQ0QsTUFBTSxDQUFDLEtBQUssVUFBVSxpQkFBaUI7SUFDckMsTUFBTSxlQUFlLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFBLDBCQUEwQixDQUFDLENBQUMsQ0FBQyxHQUFHLENBQ3ZFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUNwQixDQUFDO0lBQ0YsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUM7UUFBRSxPQUFPLEdBQUcsQ0FBQztTQUMvQixDQUFDO1FBQ0osSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQ1gsT0FBTyxlQUFlLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQztZQUFFLEVBQUUsRUFBRSxDQUFDO1FBQzFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7QUFDSCxDQUFDO0FBQ0QsTUFBTSxDQUFDLEtBQUssVUFBVSxlQUFlLENBQUMsSUFBdUI7SUFDM0QsTUFBTSxRQUFRLEdBQUcsTUFBTSxFQUFFLENBQUMsR0FBRyxDQUMzQixzQ0FBc0MsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUNoRCxDQUFDO0lBQ0YsTUFBTSxNQUFNLEdBQUcsUUFBUSxDQUFDLGlCQUFpQixDQUFDO0lBQzFDLE1BQU0sTUFBTSxHQUFHLE1BQU0sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ3ZDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FDVixHQUFHLENBQUEsNENBQTRDLE1BQU0sZUFBZSxJQUFJLENBQUMsRUFBRSxFQUFFLENBQzlFLENBQUM7QUFDSixDQUFDO0FBQ0QsTUFBTSxDQUFDLEtBQUssVUFBVSxpQkFBaUIsQ0FBQyxJQUFpQjtJQUN2RCxJQUFJLENBQUM7UUFDSCxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQ1YsR0FBRyxDQUFBLCtFQUNELElBQUksQ0FBQyxFQUFFLElBQUksQ0FBQyxNQUFNLGlCQUFpQixFQUFFLENBQ3ZDLEtBQUssSUFBSSxDQUFDLGlCQUFpQixLQUFLLElBQUksQ0FBQyxVQUFVLEtBQUssSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUNyRSxDQUFDO0lBQ0osQ0FBQztJQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7UUFDYixNQUFNLGlCQUFpQixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2hDLENBQUM7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGIgfSBmcm9tIFwiLi4vLi4vc3RhcnR1cC9kYi5qc1wiO1xyXG5pbXBvcnQgU1FMIGZyb20gXCJzcWwtdGVtcGxhdGUtc3RyaW5nc1wiO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBYUEJvb3N0RGF0YSB7XHJcbiAgbXVsdGlwbGllcjogbnVtYmVyO1xyXG4gIHVuY2xhaW1lZF90aW1lX21zOiBudW1iZXI7XHJcbiAgb3duZXJfaWQ6IHN0cmluZztcclxuICBpZD86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBFeHRlbmRYUEJvb3N0RGF0YSB7XHJcbiAgaWQ6IHN0cmluZztcclxuICBleHRlbmRfbXM6IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGVkaXRfeHBfYm9vc3QoZGF0YTogWFBCb29zdERhdGEpIHtcclxuICBjb25zdCBib29zdCA9IGF3YWl0IGRiLmdldChcclxuICAgIFNRTGBTRUxFQ1QgKiBGUk9NIHhwX2Jvb3N0cyB3aGVyZSBpZCA9ICR7ZGF0YS5pZH1gXHJcbiAgKTtcclxuICBhd2FpdCBkYi5ydW4oXHJcbiAgICBgVVBEQVRFIHhwX2Jvb3N0cyBTRVQgbXVsdGlwbGllciA9ICR7XHJcbiAgICAgIGRhdGEubXVsdGlwbGllciA/PyBib29zdC5tdWx0aXBsaWVyXHJcbiAgICB9LCBvd25lcl9pZCA9ICR7ZGF0YS5vd25lcl9pZCA/PyBib29zdC5vd25lcl9pZH0sIHVuY2xhaW1lZF90aW1lX21zID0gJHtcclxuICAgICAgZGF0YS51bmNsYWltZWRfdGltZV9tcyB8fCBib29zdC51bmNsYWltZWRfdGltZV9tc1xyXG4gICAgfSBXSEVSRSBpZCA9ICR7ZGF0YS5pZH1gXHJcbiAgKTtcclxufVxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVfYm9vc3RfaWQoKTogUHJvbWlzZTxzdHJpbmc+IHtcclxuICBjb25zdCBib29zdGVyX2lkX2xpc3QgPSAoYXdhaXQgZGIuYWxsKFNRTGBTRUxFQ1QgaWQgRlJPTSB4cF9ib29zdHNgKSkubWFwKFxyXG4gICAgKGJvb3N0KSA9PiBib29zdC5pZFxyXG4gICk7XHJcbiAgaWYgKCFib29zdGVyX2lkX2xpc3RbMF0pIHJldHVybiBgMWA7XHJcbiAgZWxzZSB7XHJcbiAgICBsZXQgaWQgPSAxO1xyXG4gICAgd2hpbGUgKGJvb3N0ZXJfaWRfbGlzdC5pbmNsdWRlcyhpZCkpIGlkKys7XHJcbiAgICByZXR1cm4gaWQudG9TdHJpbmcoKTtcclxuICB9XHJcbn1cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGV4dGVuZF94cF9ib29zdChkYXRhOiBFeHRlbmRYUEJvb3N0RGF0YSk6IFByb21pc2U8dm9pZD4ge1xyXG4gIGNvbnN0IHhwX2Jvb3N0ID0gYXdhaXQgZGIuZ2V0KFxyXG4gICAgYFNFTEVDVCAqIGZyb20geHBfYm9vc3RzIFdIRVJFIGlkID0gJHtkYXRhLmlkfWBcclxuICApO1xyXG4gIGNvbnN0IG9sZF9tcyA9IHhwX2Jvb3N0LnVuY2xhaW1lZF90aW1lX21zO1xyXG4gIGNvbnN0IG5ld19tcyA9IG9sZF9tcyArIGRhdGEuZXh0ZW5kX21zO1xyXG4gIGF3YWl0IGRiLnJ1bihcclxuICAgIFNRTGBVUERBVEUgeHBfYm9vc3RzIFNFVCB1bmNsYWltZWRfdGltZV9tcyA9ICR7bmV3X21zfSBXSEVSRSBpZCA9ICR7ZGF0YS5pZH1gXHJcbiAgKTtcclxufVxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVfeHBfYm9vc3QoZGF0YTogWFBCb29zdERhdGEpOiBQcm9taXNlPHZvaWQ+IHtcclxuICB0cnkge1xyXG4gICAgYXdhaXQgZGIucnVuKFxyXG4gICAgICBTUUxgSU5TRVJUIElOVE8geHBfYm9vc3RzIChpZCwgdW5jbGFpbWVkX3RpbWVfbXMsIG11bHRpcGxpZXIsIG93bmVyX2lkKSBWQUxVRVMgKCR7XHJcbiAgICAgICAgZGF0YS5pZCA/PyAoYXdhaXQgZ2VuZXJhdGVfYm9vc3RfaWQoKSlcclxuICAgICAgfSwgJHtkYXRhLnVuY2xhaW1lZF90aW1lX21zfSwgJHtkYXRhLm11bHRpcGxpZXJ9LCAke2RhdGEub3duZXJfaWR9KWBcclxuICAgICk7XHJcbiAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICBhd2FpdCBnZW5lcmF0ZV94cF9ib29zdChkYXRhKTtcclxuICB9XHJcbn1cclxuIl19