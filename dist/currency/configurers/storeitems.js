import { get_store_item } from "../operations/storeitems.js";
import SQL from "sql-template-strings";
import { db } from "../../startup/db.js";
export async function create_store_item(data) {
    if ((await get_store_item(data.item_name)) !== null) {
        throw new Error(`Item ${data.item_name} already exists`);
    }
    await db.run(SQL `INSERT INTO store_items (item_name, description, price, currency_required, role_to_give, role_duration, currency_to_give, currency_to_give_amount) VALUES (${data.item_name}, ${data.description}, ${data.price}, ${data.currency_required}, ${data.role_to_give_id}, ${data.role_duration}, ${data.currency_to_give}, ${data.currency_to_give_amount})`);
}
export async function configure_store_item(data) {
    if ((await get_store_item(data.item_name)) === null) {
        throw new Error(`Item ${data.item_name} does not exist`);
    }
    await db.run(SQL `UPDATE store_items SET description = ${data.description}, price = ${data.price}, currency_required = ${data.currency_required}, role_to_give = ${data.role_to_give_id}, role_duration = ${data.role_duration}, currency_to_give = ${data.currency_to_give}, currency_to_give_amount = ${data.currency_to_give_amount} WHERE item_name = ${data.item_name}`);
}
export async function delete_store_item(item_name) {
    if ((await get_store_item(item_name)) === null) {
        throw new Error(`Item ${item_name} does not exist`);
    }
    await db.run(SQL `DELETE FROM store_items WHERE item_name = ${item_name}`);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmVpdGVtcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jdXJyZW5jeS9jb25maWd1cmVycy9zdG9yZWl0ZW1zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUM3RCxPQUFPLEdBQUcsTUFBTSxzQkFBc0IsQ0FBQztBQUN2QyxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFZekMsTUFBTSxDQUFDLEtBQUssVUFBVSxpQkFBaUIsQ0FBQyxJQUFtQjtJQUN6RCxJQUFJLENBQUMsTUFBTSxjQUFjLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUM7UUFDcEQsTUFBTSxJQUFJLEtBQUssQ0FBQyxRQUFRLElBQUksQ0FBQyxTQUFTLGlCQUFpQixDQUFDLENBQUM7SUFDM0QsQ0FBQztJQUNELE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FDVixHQUFHLENBQUEsOEpBQThKLElBQUksQ0FBQyxTQUFTLEtBQUssSUFBSSxDQUFDLFdBQVcsS0FBSyxJQUFJLENBQUMsS0FBSyxLQUFLLElBQUksQ0FBQyxpQkFBaUIsS0FBSyxJQUFJLENBQUMsZUFBZSxLQUFLLElBQUksQ0FBQyxhQUFhLEtBQUssSUFBSSxDQUFDLGdCQUFnQixLQUFLLElBQUksQ0FBQyx1QkFBdUIsR0FBRyxDQUM3VixDQUFDO0FBQ0osQ0FBQztBQUNELE1BQU0sQ0FBQyxLQUFLLFVBQVUsb0JBQW9CLENBQUMsSUFBbUI7SUFDNUQsSUFBSSxDQUFDLE1BQU0sY0FBYyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDO1FBQ3BELE1BQU0sSUFBSSxLQUFLLENBQUMsUUFBUSxJQUFJLENBQUMsU0FBUyxpQkFBaUIsQ0FBQyxDQUFDO0lBQzNELENBQUM7SUFDRCxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQ1YsR0FBRyxDQUFBLHdDQUF3QyxJQUFJLENBQUMsV0FBVyxhQUFhLElBQUksQ0FBQyxLQUFLLHlCQUF5QixJQUFJLENBQUMsaUJBQWlCLG9CQUFvQixJQUFJLENBQUMsZUFBZSxxQkFBcUIsSUFBSSxDQUFDLGFBQWEsd0JBQXdCLElBQUksQ0FBQyxnQkFBZ0IsK0JBQStCLElBQUksQ0FBQyx1QkFBdUIsc0JBQXNCLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FDL1YsQ0FBQztBQUNKLENBQUM7QUFDRCxNQUFNLENBQUMsS0FBSyxVQUFVLGlCQUFpQixDQUFDLFNBQWlCO0lBQ3ZELElBQUksQ0FBQyxNQUFNLGNBQWMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDO1FBQy9DLE1BQU0sSUFBSSxLQUFLLENBQUMsUUFBUSxTQUFTLGlCQUFpQixDQUFDLENBQUM7SUFDdEQsQ0FBQztJQUNELE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUEsNkNBQTZDLFNBQVMsRUFBRSxDQUFDLENBQUM7QUFDNUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldF9zdG9yZV9pdGVtIH0gZnJvbSBcIi4uL29wZXJhdGlvbnMvc3RvcmVpdGVtcy5qc1wiO1xyXG5pbXBvcnQgU1FMIGZyb20gXCJzcWwtdGVtcGxhdGUtc3RyaW5nc1wiO1xyXG5pbXBvcnQgeyBkYiB9IGZyb20gXCIuLi8uLi9zdGFydHVwL2RiLmpzXCI7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFN0b3JlSXRlbURhdGEge1xyXG4gIGl0ZW1fbmFtZTogc3RyaW5nO1xyXG4gIGRlc2NyaXB0aW9uOiBzdHJpbmc7XHJcbiAgcHJpY2U6IG51bWJlcjtcclxuICBjdXJyZW5jeV9yZXF1aXJlZDogc3RyaW5nO1xyXG4gIHJvbGVfdG9fZ2l2ZV9pZDogc3RyaW5nIHwgdW5kZWZpbmVkO1xyXG4gIHJvbGVfZHVyYXRpb246IG51bWJlciB8IHVuZGVmaW5lZDtcclxuICBjdXJyZW5jeV90b19naXZlOiBzdHJpbmcgfCB1bmRlZmluZWQ7XHJcbiAgY3VycmVuY3lfdG9fZ2l2ZV9hbW91bnQ6IG51bWJlciB8IHVuZGVmaW5lZDtcclxufVxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlX3N0b3JlX2l0ZW0oZGF0YTogU3RvcmVJdGVtRGF0YSk6IFByb21pc2U8dm9pZD4ge1xyXG4gIGlmICgoYXdhaXQgZ2V0X3N0b3JlX2l0ZW0oZGF0YS5pdGVtX25hbWUpKSAhPT0gbnVsbCkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKGBJdGVtICR7ZGF0YS5pdGVtX25hbWV9IGFscmVhZHkgZXhpc3RzYCk7XHJcbiAgfVxyXG4gIGF3YWl0IGRiLnJ1bihcclxuICAgIFNRTGBJTlNFUlQgSU5UTyBzdG9yZV9pdGVtcyAoaXRlbV9uYW1lLCBkZXNjcmlwdGlvbiwgcHJpY2UsIGN1cnJlbmN5X3JlcXVpcmVkLCByb2xlX3RvX2dpdmUsIHJvbGVfZHVyYXRpb24sIGN1cnJlbmN5X3RvX2dpdmUsIGN1cnJlbmN5X3RvX2dpdmVfYW1vdW50KSBWQUxVRVMgKCR7ZGF0YS5pdGVtX25hbWV9LCAke2RhdGEuZGVzY3JpcHRpb259LCAke2RhdGEucHJpY2V9LCAke2RhdGEuY3VycmVuY3lfcmVxdWlyZWR9LCAke2RhdGEucm9sZV90b19naXZlX2lkfSwgJHtkYXRhLnJvbGVfZHVyYXRpb259LCAke2RhdGEuY3VycmVuY3lfdG9fZ2l2ZX0sICR7ZGF0YS5jdXJyZW5jeV90b19naXZlX2Ftb3VudH0pYFxyXG4gICk7XHJcbn1cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNvbmZpZ3VyZV9zdG9yZV9pdGVtKGRhdGE6IFN0b3JlSXRlbURhdGEpIHtcclxuICBpZiAoKGF3YWl0IGdldF9zdG9yZV9pdGVtKGRhdGEuaXRlbV9uYW1lKSkgPT09IG51bGwpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcihgSXRlbSAke2RhdGEuaXRlbV9uYW1lfSBkb2VzIG5vdCBleGlzdGApO1xyXG4gIH1cclxuICBhd2FpdCBkYi5ydW4oXHJcbiAgICBTUUxgVVBEQVRFIHN0b3JlX2l0ZW1zIFNFVCBkZXNjcmlwdGlvbiA9ICR7ZGF0YS5kZXNjcmlwdGlvbn0sIHByaWNlID0gJHtkYXRhLnByaWNlfSwgY3VycmVuY3lfcmVxdWlyZWQgPSAke2RhdGEuY3VycmVuY3lfcmVxdWlyZWR9LCByb2xlX3RvX2dpdmUgPSAke2RhdGEucm9sZV90b19naXZlX2lkfSwgcm9sZV9kdXJhdGlvbiA9ICR7ZGF0YS5yb2xlX2R1cmF0aW9ufSwgY3VycmVuY3lfdG9fZ2l2ZSA9ICR7ZGF0YS5jdXJyZW5jeV90b19naXZlfSwgY3VycmVuY3lfdG9fZ2l2ZV9hbW91bnQgPSAke2RhdGEuY3VycmVuY3lfdG9fZ2l2ZV9hbW91bnR9IFdIRVJFIGl0ZW1fbmFtZSA9ICR7ZGF0YS5pdGVtX25hbWV9YFxyXG4gICk7XHJcbn1cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGRlbGV0ZV9zdG9yZV9pdGVtKGl0ZW1fbmFtZTogc3RyaW5nKSB7XHJcbiAgaWYgKChhd2FpdCBnZXRfc3RvcmVfaXRlbShpdGVtX25hbWUpKSA9PT0gbnVsbCkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKGBJdGVtICR7aXRlbV9uYW1lfSBkb2VzIG5vdCBleGlzdGApO1xyXG4gIH1cclxuICBhd2FpdCBkYi5ydW4oU1FMYERFTEVURSBGUk9NIHN0b3JlX2l0ZW1zIFdIRVJFIGl0ZW1fbmFtZSA9ICR7aXRlbV9uYW1lfWApO1xyXG59XHJcbiJdfQ==