import { client } from "../startup/client.js";
import config from "../configs/config.json" with { type: "json" };
import * as Discord from "discord.js";
import "dotenv/config";
import * as fs from "fs";
const rest = new Discord.REST().setToken(config.bot.token);
export async function get_commands() {
    const commands = [];
    const files = fs.readdirSync("./src/commands");
    for (const file of files) {
        const command = await import(`../commands/${file.replace(".ts", ".js")}`);
        commands.push(command.default);
    }
    return commands;
}
export async function register_commands() {
    const commands = await get_commands();
    const application_commands = Discord.Routes.applicationCommands(client.user.id);
    await rest.put(application_commands, {
        body: commands.map((c) => c.data.toJSON()),
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWFuZHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc3RhcnR1cC9jb21tYW5kcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDOUMsT0FBTyxNQUFNLE1BQU0sd0JBQXdCLENBQUMsU0FBUyxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUM7QUFDcEUsT0FBTyxLQUFLLE9BQU8sTUFBTSxZQUFZLENBQUM7QUFDdEMsT0FBTyxlQUFlLENBQUM7QUFDdkIsT0FBTyxLQUFLLEVBQUUsTUFBTSxJQUFJLENBQUM7QUFDekIsTUFBTSxJQUFJLEdBQUcsSUFBSSxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7QUFFM0QsTUFBTSxDQUFDLEtBQUssVUFBVSxZQUFZO0lBQ2hDLE1BQU0sUUFBUSxHQUFHLEVBQUUsQ0FBQztJQUNwQixNQUFNLEtBQUssR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFFL0MsS0FBSyxNQUFNLElBQUksSUFBSSxLQUFLLEVBQUUsQ0FBQztRQUN6QixNQUFNLE9BQU8sR0FBRyxNQUFNLE1BQU0sQ0FBQyxlQUFlLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUMxRSxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBQ0QsT0FBTyxRQUFRLENBQUM7QUFDbEIsQ0FBQztBQUNELE1BQU0sQ0FBQyxLQUFLLFVBQVUsaUJBQWlCO0lBQ3JDLE1BQU0sUUFBUSxHQUFHLE1BQU0sWUFBWSxFQUFFLENBQUM7SUFDdEMsTUFBTSxvQkFBb0IsR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLG1CQUFtQixDQUM3RCxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FDZixDQUFDO0lBQ0YsTUFBTSxJQUFJLENBQUMsR0FBRyxDQUFDLG9CQUFvQixFQUFFO1FBQ25DLElBQUksRUFBRSxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0tBQzNDLENBQUMsQ0FBQztBQUNMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjbGllbnQgfSBmcm9tIFwiLi4vc3RhcnR1cC9jbGllbnQuanNcIjtcclxuaW1wb3J0IGNvbmZpZyBmcm9tIFwiLi4vY29uZmlncy9jb25maWcuanNvblwiIGFzc2VydCB7IHR5cGU6IFwianNvblwiIH07XHJcbmltcG9ydCAqIGFzIERpc2NvcmQgZnJvbSBcImRpc2NvcmQuanNcIjtcclxuaW1wb3J0IFwiZG90ZW52L2NvbmZpZ1wiO1xyXG5pbXBvcnQgKiBhcyBmcyBmcm9tIFwiZnNcIjtcclxuY29uc3QgcmVzdCA9IG5ldyBEaXNjb3JkLlJFU1QoKS5zZXRUb2tlbihjb25maWcuYm90LnRva2VuKTtcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRfY29tbWFuZHMoKTogUHJvbWlzZTxhbnlbXT4ge1xyXG4gIGNvbnN0IGNvbW1hbmRzID0gW107XHJcbiAgY29uc3QgZmlsZXMgPSBmcy5yZWFkZGlyU3luYyhcIi4vc3JjL2NvbW1hbmRzXCIpO1xyXG5cclxuICBmb3IgKGNvbnN0IGZpbGUgb2YgZmlsZXMpIHtcclxuICAgIGNvbnN0IGNvbW1hbmQgPSBhd2FpdCBpbXBvcnQoYC4uL2NvbW1hbmRzLyR7ZmlsZS5yZXBsYWNlKFwiLnRzXCIsIFwiLmpzXCIpfWApO1xyXG4gICAgY29tbWFuZHMucHVzaChjb21tYW5kLmRlZmF1bHQpO1xyXG4gIH1cclxuICByZXR1cm4gY29tbWFuZHM7XHJcbn1cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJlZ2lzdGVyX2NvbW1hbmRzKCk6IFByb21pc2U8dm9pZD4ge1xyXG4gIGNvbnN0IGNvbW1hbmRzID0gYXdhaXQgZ2V0X2NvbW1hbmRzKCk7XHJcbiAgY29uc3QgYXBwbGljYXRpb25fY29tbWFuZHMgPSBEaXNjb3JkLlJvdXRlcy5hcHBsaWNhdGlvbkNvbW1hbmRzKFxyXG4gICAgY2xpZW50LnVzZXIuaWRcclxuICApO1xyXG4gIGF3YWl0IHJlc3QucHV0KGFwcGxpY2F0aW9uX2NvbW1hbmRzLCB7XHJcbiAgICBib2R5OiBjb21tYW5kcy5tYXAoKGMpID0+IGMuZGF0YS50b0pTT04oKSksXHJcbiAgfSk7XHJcbn1cclxuIl19