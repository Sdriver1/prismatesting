import * as Discord from "discord.js";
export default {
    data: new Discord.SlashCommandBuilder()
        .setName("microwave")
        .setDescription("mmmmmmmmmmmmmmmmm")
        .addStringOption((option) => option.setName("item").setDescription("The thing you want to microwave")),
    run: async function (interaction) {
        const item_name = interaction.options.getString("item");
        const microwave_message = await interaction.editReply("Click");
        await wait(1000);
        microwave_message.edit("Clank");
        await wait(1000);
        microwave_message.edit("m");
        for (let i = 0; i < 10; i++) {
            microwave_message.edit("m" + "m".repeat(i * 2));
            await wait(1000);
        }
        microwave_message.edit("BEEP!");
        await wait(1000);
        microwave_message.edit("### BEEP! x2");
        await wait(1000);
        microwave_message.edit("# BEEP! x3");
        await wait(1000);
        microwave_message.edit("Successful microwave!");
    },
    options: {
        server_cooldown: 0,
    },
};
function wait(ms) {
    return new Promise((resolve) => setTimeout(resolve, ms));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWljcm93YXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbW1hbmRzL21pY3Jvd2F2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEtBQUssT0FBTyxNQUFNLFlBQVksQ0FBQztBQUV0QyxlQUFlO0lBQ2IsSUFBSSxFQUFFLElBQUksT0FBTyxDQUFDLG1CQUFtQixFQUFFO1NBQ3BDLE9BQU8sQ0FBQyxXQUFXLENBQUM7U0FDcEIsY0FBYyxDQUFDLG1CQUFtQixDQUFDO1NBQ25DLGVBQWUsQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQzFCLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsY0FBYyxDQUFDLGlDQUFpQyxDQUFDLENBQ3pFO0lBQ0gsR0FBRyxFQUFFLEtBQUssV0FBVyxXQUFXO1FBQzlCLE1BQU0sU0FBUyxHQUFHLFdBQVcsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3hELE1BQU0saUJBQWlCLEdBQUcsTUFBTSxXQUFXLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQy9ELE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2pCLGlCQUFpQixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNoQyxNQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNqQixpQkFBaUIsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDNUIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO1lBQzVCLGlCQUFpQixDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoRCxNQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNuQixDQUFDO1FBQ0QsaUJBQWlCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2hDLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2pCLGlCQUFpQixDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUN2QyxNQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNqQixpQkFBaUIsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDckMsTUFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDakIsaUJBQWlCLENBQUMsSUFBSSxDQUFDLHVCQUF1QixDQUFDLENBQUM7SUFDbEQsQ0FBQztJQUNELE9BQU8sRUFBRTtRQUNQLGVBQWUsRUFBRSxDQUFDO0tBQ25CO0NBQ0YsQ0FBQztBQUVGLFNBQVMsSUFBSSxDQUFDLEVBQVU7SUFDdEIsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQzNELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBEaXNjb3JkIGZyb20gXCJkaXNjb3JkLmpzXCI7XHJcbi8vIERlbGV0ZSBzdG9yZSBpdGVtXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICBkYXRhOiBuZXcgRGlzY29yZC5TbGFzaENvbW1hbmRCdWlsZGVyKClcclxuICAgIC5zZXROYW1lKFwibWljcm93YXZlXCIpXHJcbiAgICAuc2V0RGVzY3JpcHRpb24oXCJtbW1tbW1tbW1tbW1tbW1tbVwiKVxyXG4gICAgLmFkZFN0cmluZ09wdGlvbigob3B0aW9uKSA9PlxyXG4gICAgICBvcHRpb24uc2V0TmFtZShcIml0ZW1cIikuc2V0RGVzY3JpcHRpb24oXCJUaGUgdGhpbmcgeW91IHdhbnQgdG8gbWljcm93YXZlXCIpXHJcbiAgICApLFxyXG4gIHJ1bjogYXN5bmMgZnVuY3Rpb24gKGludGVyYWN0aW9uKSB7XHJcbiAgICBjb25zdCBpdGVtX25hbWUgPSBpbnRlcmFjdGlvbi5vcHRpb25zLmdldFN0cmluZyhcIml0ZW1cIik7XHJcbiAgICBjb25zdCBtaWNyb3dhdmVfbWVzc2FnZSA9IGF3YWl0IGludGVyYWN0aW9uLmVkaXRSZXBseShcIkNsaWNrXCIpO1xyXG4gICAgYXdhaXQgd2FpdCgxMDAwKTtcclxuICAgIG1pY3Jvd2F2ZV9tZXNzYWdlLmVkaXQoXCJDbGFua1wiKTtcclxuICAgIGF3YWl0IHdhaXQoMTAwMCk7XHJcbiAgICBtaWNyb3dhdmVfbWVzc2FnZS5lZGl0KFwibVwiKTtcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTA7IGkrKykge1xyXG4gICAgICBtaWNyb3dhdmVfbWVzc2FnZS5lZGl0KFwibVwiICsgXCJtXCIucmVwZWF0KGkgKiAyKSk7XHJcbiAgICAgIGF3YWl0IHdhaXQoMTAwMCk7XHJcbiAgICB9XHJcbiAgICBtaWNyb3dhdmVfbWVzc2FnZS5lZGl0KFwiQkVFUCFcIik7XHJcbiAgICBhd2FpdCB3YWl0KDEwMDApO1xyXG4gICAgbWljcm93YXZlX21lc3NhZ2UuZWRpdChcIiMjIyBCRUVQISB4MlwiKTtcclxuICAgIGF3YWl0IHdhaXQoMTAwMCk7XHJcbiAgICBtaWNyb3dhdmVfbWVzc2FnZS5lZGl0KFwiIyBCRUVQISB4M1wiKTtcclxuICAgIGF3YWl0IHdhaXQoMTAwMCk7XHJcbiAgICBtaWNyb3dhdmVfbWVzc2FnZS5lZGl0KFwiU3VjY2Vzc2Z1bCBtaWNyb3dhdmUhXCIpO1xyXG4gIH0sXHJcbiAgb3B0aW9uczoge1xyXG4gICAgc2VydmVyX2Nvb2xkb3duOiAwLFxyXG4gIH0sXHJcbn07XHJcblxyXG5mdW5jdGlvbiB3YWl0KG1zOiBudW1iZXIpIHtcclxuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpKTtcclxufVxyXG4iXX0=